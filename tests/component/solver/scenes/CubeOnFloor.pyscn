import Sofa

def createScene(rootNode):

                rootNode.createObject('RequiredPlugin', pluginName='SoftRobots')
                rootNode.createObject('RequiredPlugin', pluginName='SofaSparseSolver')
                rootNode.createObject('VisualStyle', displayFlags='showWireframe showVisualModels showBehaviorModels showCollisionModels hideBoundingCollisionModels showForceFields showInteractionForceFields')

                rootNode.findData('gravity').value = "0 -9180 0"
                rootNode.findData('dt').value = 0.01

                rootNode.createObject('FreeMotionAnimationLoop')
                rootNode.createObject('QPInverseProblemSolver', printLog='0', epsilon="0", maxIterations="1000", tolerance="1e-5")
                rootNode.createObject('DefaultPipeline', verbose="0")
                rootNode.createObject('BruteForceBroadPhase', name="N2")
                rootNode.createObject('BVHNarrowPhase')
                rootNode.createObject('DefaultContactManager', response="FrictionContactConstraint", responseParams="mu=0.6")
                rootNode.createObject('LocalMinDistance', name="Proximity", alarmDistance="3", contactDistance="1")

                rootNode.createObject('BackgroundSetting', color='0 0.168627 0.211765')
                rootNode.createObject('OglSceneFrame', style="Arrows", alignment="TopRight")


                ##########################################
                # Effector goal for interactive control  #
                ##########################################
                goal = rootNode.createChild('goal')
                goal.createObject('MechanicalObject', name='goalMO', showObject="1", showObjectScale="5", drawMode="1", position = "10 0 0")


		            ##########################################
                # FEM Model                              #
                ##########################################
                model = rootNode.createChild('model')
                model.createObject('EulerImplicitSolver', name='odesolver')
                model.createObject('SparseLDLSolver', name='preconditioner')
                model.createObject('RegularGridTopology', name='loader', n="6 6 6", min="-10 -10 -10", max="10 10 10")
                model.createObject('MechanicalObject', name='tetras', template='Vec3', showIndices=False, showIndicesScale='4e-5')
                model.createObject('UniformMass', totalMass='0.005')

                model.createObject('ForcePointActuator', name="act", template='Vec3', showForce="1", visuScale="100", direction="1 0 0", indices="90 126 84 120", minForce="0", maxForce="0.5")

                model.createObject('HexahedronFEMForceField', template='Vec3', name='FEM', method='large', poissonRatio='0.49',  youngModulus='600')
                model.createObject('LinearSolverConstraintCorrection', solverName='preconditioner')


                ##########################################
                # Effector                               #
                ##########################################
                effector = model.createChild('effector')
                effector.createObject('MechanicalObject', name="effectorPoint",
                        position=("10 0 0"))
                effector.createObject('PositionEffector', template='Vec3',
                        indices="0",
                        effectorGoal="@../../goal/goalMO.position")
                effector.createObject('BarycentricMapping', mapForces=False, mapMasses=False)


                ##########################################
                # Contact                                #
                ##########################################
                modelContact = model.createChild('contact')
                modelContact.createObject('MeshObjLoader', name='loader', filename='mesh/cube.obj', scale="10")
                modelContact.createObject('MeshTopology', src='@loader', name='topo')
                modelContact.createObject('MechanicalObject')
                modelContact.createObject('TriangleCollisionModel', group=1)
                modelContact.createObject('LineCollisionModel', group=1)
                modelContact.createObject('PointCollisionModel', group=1)
                modelContact.createObject('BarycentricMapping')


                ##########################################
                # Contact                                #
                ##########################################
                floorContact = rootNode.createChild('floorContact')
                floorContact.createObject('MeshObjLoader', name='loader', filename='mesh/square1.obj', scale="200", rotation="90 0 180", translation="100 -11 -100")
                floorContact.createObject('MeshTopology', src='@loader', name='topo')
                floorContact.createObject('MechanicalObject')
                floorContact.createObject('TriangleCollisionModel', group=2)
                floorContact.createObject('LineCollisionModel', group=2)
                floorContact.createObject('PointCollisionModel', group=2)

                return rootNode
